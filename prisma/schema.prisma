generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model food_guide {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String       @db.VarChar(255)
  user_id    String       @db.Uuid
  user       user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  promotion  promotion[]
  restaurant restaurant[]
}

model menu {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String     @db.VarChar(255)
  description   String
  price         Int
  restaurant_id String     @db.Uuid
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model photo {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  url           String     @db.VarChar(255)
  user_id       String     @db.Uuid
  restaurant_id String     @db.Uuid
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model promotion {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String     @db.VarChar(255)
  description   String
  start_date    DateTime   @db.Date
  end_date      DateTime   @db.Date
  food_guide_id String     @db.Uuid
  food_guide    food_guide @relation(fields: [food_guide_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reservation {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date_time     DateTime   @db.Timestamp(6)
  party_size    Int
  user_id       String     @db.Uuid
  restaurant_id String     @db.Uuid
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurant {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String        @db.VarChar(255)
  address       String        @db.VarChar(255)
  cuisine       String        @db.VarChar(255)
  price_range   String        @db.VarChar(255)
  food_guide_id String        @db.Uuid
  menu          menu[]
  photo         photo[]
  reservation   reservation[]
  food_guide    food_guide    @relation(fields: [food_guide_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review        review[]
}

model review {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating        Int
  content       String
  user_id       String     @db.Uuid
  restaurant_id String     @db.Uuid
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  food_guide  food_guide[]
  photo       photo[]
  reservation reservation[]
  review      review[]
}
